# This workflow is designed to consistently update the visual regression test snapshots
# in a consistent hardware and software environment.
# For more detailed reasons, visit: https://dev.azure.com/willowdev/Unified/_workitems/edit/79523

# Triggered by a PR comment containing the text '/update-snapshots', this workflow executes
# the visual regression snapshot update, commits the snapshot changes to the corresponding PR branch,
# and posts a comment in the PR indicating the result.
name: Update Visual Regression Test Snapshots

on:
  issue_comment:
    # This event will only trigger a workflow run if the workflow file is on the default branch.
    types: [created, edited]

env:
  ROOT_DIRECTORY: design-system

# cancel running jobs if a new job is queued in the same Pull Request
concurrency:
  group: Platform UI - ${{ github.workflow }}-${{ github.event.issue.id }}
  cancel-in-progress: true

jobs:
  check-if-need-update:
    runs-on: ubuntu-22.04
    # the comment is on a pull request and the comment body contains '/update-snapshots'
    if: ${{ github.event.issue.pull_request }} && contains(github.event.comment.body, '/update-snapshots')
    env:
      need_to_update: false
      # pull_request_url: ${{ github.event.issue.pull_request.url }}
      pull_request_ref: undefined

    outputs:
      need_to_update: ${{ env.need_to_update }}
      pull_request_ref: ${{ env.pull_request_ref }}
      # repo: ${{steps.set-variable.outputs.repo}}
      # ref: ${{steps.set-variable.outputs.ref}}
    steps:
      # - name: Get pull request number
      #   run: |
      #     pr_number=$(echo  ${{ env.pull_request_url }} | grep -oP '(?<=pulls/)\d+')
      #     echo "pull_request_ref=refs/pull/$pr_number/head" >> $GITHUB_ENV

      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: logs
        id: set-variable
        run: |
          # echo "ref is ${{ env.pull_request_ref }}"
          echo "pull_request_ref=${{ fromJSON(steps.get-pr.outputs.result).head.ref }}" >> $GITHUB_ENV
          # echo "repo=${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}" >> $GITHUB_OUTPUT 
          # echo "ref=${{ fromJSON(steps.get-pr.outputs.result).head.ref }}" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.pull_request_ref }}
          persist-credentials: true
          token: ${{ github.token }}

      - name: Check if snapshots need to be updated
        id: check-snapshots
        run: |

          git rev-parse --abbrev-ref HEAD

          if git diff --quiet origin -- 'design-system/'; then
              echo "No changes in design-system/, no snapshots need to be updated."
              exit 0
          else
              echo "The code in design-system/ has changed compared to the main branch. 
              Will update snapshots."
              echo "need_to_update=true" >> $GITHUB_ENV
          fi

  update-snapshots-and-commit:
    runs-on: ubuntu-22.04
    needs: check-if-need-update
    if: ${{ needs.check-if-need-update.outputs.need_to_update == 'true' }}
    defaults:
      run:
        working-directory: design-system
    permissions:
      contents: write
    env:
      snapshots_updated: false
      # pull_request_ref:
    outputs:
      snapshots_updated: ${{ env.snapshots_updated }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.check-if-need-update.outputs.pull_request_ref }}
          persist-credentials: true
          token: ${{ github.token }}

      - name: Add current time in file test.txt
        run: |
          echo "Current time: $(date)" >> test.txt
          cat test.txt

      - name: Commit and push if changed
        id: commit
        shell: bash
        run: |
          # this is required to make git work in the container

          # list current branch name
          git rev-parse --abbrev-ref HEAD

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # If there are any changes, commit them and push them.
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "[Bot]: Update visual regression test snapshots"
            git push
            echo "snapshots_updated=true" >> $GITHUB_ENV
          else
            echo "No changes detected."
            echo "snapshots_updated=false" >> $GITHUB_ENV
          fi

  comment-on-pr:
    needs: update-snapshots-and-commit
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            if ('${{ needs.update-snapshots-and-commit.outputs.snapshots_updated }}' == 'true') {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: ':construction: Snapshots updated! :rocket:'
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: ':no_entry: No snapshot changes detected.'
              })
            }
