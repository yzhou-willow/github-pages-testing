name: Commit new version Storybook site in StorybookReleases

on:
  workflow_call:
    inputs:
      new-version:
        description: The version of the Storybook site to commit.
        required: true
        type: string
      artifact-name:
        description: The name of the artifact to download the site from.
        required: false
        type: string
        default: "storybook"
      site-folder-path:
        description: The path where the site folder will be stored.
        required: false
        type: string
        default: "/sites"

env:
  new_version: ${{inputs.new_version}}

permissions: write-all

jobs:
  download-site-in-StyrobookReleases:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.repository }}
      - run: echo ${{ github.workspace }}

      - name: Checkout repo storybook-pages
        uses: actions/checkout@v3
        with:
          repository: WillowInc/StorybookReleases
          token: ${{ secrets.FINE_GRAINED_PAT_FOR_STORYBOOK_PAGES }}
          persist-credentials: true

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{inputs.artifact-name}}
          path: .${{inputs.site-folder-path}}/${{env.new_version}}

      - name: Update latest version path in index.html
        run: |
          ls -la
          cd sites
          ls -la

          # get last version
          start='<meta http-equiv="refresh" content="0; url=./'
          end='">'
          pattern="${start}\([^${end}]*\)${end}"
          version=$(sed -n "s#${pattern}#\1#p" index.html)

          # trim spaces
          trimed_version=${version##*[[:space:]]}

          # save trimed_version to env variable
          echo "last_version=$trimed_version"  >> "$GITHUB_ENV"

      # env variable set and get must be in seperate steps,
      # otherwise it cannot read the value
      - name: Check if last_version is set
        run: |
          if [ -z "${{ env.last_version }}" ]; then
            echo "Error: No matched previous version found"
            exit 1           
          fi

      - name: Update latest version path in index.html
        run: |
          echo "last version: ${{ env.last_version }}"
          echo "new version: ${{ env.new_version }}"
          cd sites
          ls -la
          sed -i 's/${{ env.last_version }}/${{env.new_version}}/g' index.html

          # check if index.html updated 
          if [[ -n $(git status -s index.html) ]]; then
            echo "index.html updated scuccessfully"
          else
            echo "Error: index.html not updated"
            exit 1
          fi

      - name: Commit and push changes
        run: |
          ls -la

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --list

          git add .
          git commit -m "Add new version ${{ env.new_version }} folder and update latest version path in index.html"
          git push
